const fs = require('fs');
const path = require('path');

// Crear im√°genes JPG v√°lidas usando un enfoque diferente
async function createValidJPGImages() {
  console.log('üé® Creando im√°genes JPG v√°lidas...');

  // Crear un JPG v√°lido m√≠nimo que el navegador pueda renderizar
  // Un JPG v√°lido debe tener una estructura espec√≠fica

  const properties = [
    { name: 'property1', color: '#3B82F6' },
    { name: 'property2', color: '#10B981' },
    { name: 'property3', color: '#F59E0B' },
    { name: 'property4', color: '#EF4444' },
    { name: 'property5', color: '#8B5CF6' },
  ];

  for (const prop of properties) {
    // Crear un JPG v√°lido usando un enfoque m√°s robusto
    // Esto crear√° un JPG de 1x1 p√≠xel v√°lido
    const jpgData = Buffer.from([
      // SOI (Start of Image)
      0xff, 0xd8,
      // APP0 marker
      0xff, 0xe0, 0x00, 0x10,
      // JFIF identifier
      0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00,
      // DQT (Define Quantization Table)
      0xff, 0xdb, 0x00, 0x43, 0x00,
      // Quantization table data (simplified)
      0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09, 0x09, 0x08, 0x0a, 0x0c,
      0x14, 0x0d, 0x0c, 0x0b, 0x0b, 0x0c, 0x19, 0x12, 0x13, 0x0f, 0x14, 0x1d, 0x1a, 0x1f, 0x1e,
      0x1d, 0x1a, 0x1c, 0x1c, 0x20, 0x24, 0x2e, 0x27, 0x20, 0x22, 0x2c, 0x23, 0x1c, 0x1c, 0x28,
      0x37, 0x29, 0x2c, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1f, 0x27, 0x39, 0x3d, 0x38, 0x32, 0x3c,
      0x2e, 0x33, 0x34, 0x32,
      // SOF0 (Start of Frame)
      0xff, 0xc0, 0x00, 0x11, 0x08, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x02, 0x11,
      0x01, 0x03, 0x11, 0x01,
      // DHT (Define Huffman Table)
      0xff, 0xc4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc4, 0x00, 0x14, 0x10, 0x01, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      // SOS (Start of Scan)
      0xff, 0xda, 0x00, 0x0c, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3f, 0x00,
      // Image data (1x1 pixel)
      0x00, 0x3f, 0x00,
      // EOI (End of Image)
      0xff, 0xd9,
    ]);

    // Guardar como archivo JPG
    const jpgPath = path.join('public', 'uploads', 'properties', `${prop.name}.jpg`);
    fs.writeFileSync(jpgPath, jpgData);

    console.log(`‚úÖ Creado: ${prop.name}.jpg (${jpgData.length} bytes)`);
  }

  console.log('üéâ Im√°genes JPG v√°lidas creadas exitosamente');
}

createValidJPGImages();
