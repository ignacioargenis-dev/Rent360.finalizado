const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixMissingOwners() {
  console.log('üîç Buscando propiedades sin ownerId v√°lido...');

  try {
    // Encontrar propiedades que no tienen ownerId o que el owner no existe
    const properties = await prisma.property.findMany({
      select: {
        id: true,
        title: true,
        ownerId: true,
        owner: {
          select: {
            id: true,
            name: true,
            email: true,
          },
        },
      },
    });

    const propertiesWithoutValidOwner = properties.filter(property => {
      return !property.ownerId || !property.owner;
    });

    console.log(
      `üìä Encontradas ${propertiesWithoutValidOwner.length} propiedades sin owner v√°lido`
    );

    if (propertiesWithoutValidOwner.length === 0) {
      console.log('‚úÖ Todas las propiedades tienen owner v√°lido');
      return;
    }

    // Mostrar las propiedades problem√°ticas
    console.log('\n‚ùå Propiedades sin owner v√°lido:');
    propertiesWithoutValidOwner.forEach(property => {
      console.log(
        `  - ID: ${property.id}, T√≠tulo: ${property.title}, ownerId: ${property.ownerId}`
      );
    });

    // Aqu√≠ podr√≠amos implementar l√≥gica para asignar owners por defecto o pedir intervenci√≥n manual
    // Por ahora, solo reportamos el problema

    console.log(
      '\n‚ö†Ô∏è  Estas propiedades necesitan ownerId v√°lido asignado manualmente en la base de datos'
    );
  } catch (error) {
    console.error('‚ùå Error al verificar owners:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixMissingOwners();
