{
  "metadata": {
    "timestamp": "2025-09-04T05:18:31.741Z",
    "duration": 0,
    "version": "1.0",
    "analyzer": "Rent360 System Review 360°"
  },
  "statistics": {
    "filesAnalyzed": 6,
    "totalLines": 3348,
    "issuesFound": 262,
    "severityCounts": {
      "critical": 0,
      "high": 6,
      "medium": 215,
      "low": 41
    }
  },
  "issues": {
    "logic": [
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 8,
        "code": "import { KYCService } from './kyc-service';",
        "timestamp": "2025-09-04T05:18:28.447Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 33,
        "code": "requireKYC: boolean;",
        "timestamp": "2025-09-04T05:18:28.448Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 41,
        "code": "amount: number;",
        "timestamp": "2025-09-04T05:18:28.448Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 59,
        "code": "amount: number;",
        "timestamp": "2025-09-04T05:18:28.448Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/payout-service.ts",
        "line": 112,
        "code": "if (this.config) return this.config;",
        "timestamp": "2025-09-04T05:18:28.448Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 135,
        "code": "requireKYC: true,",
        "timestamp": "2025-09-04T05:18:28.448Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 161,
        "code": "throw new DatabaseError('Error al obtener configuración de payouts');",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 189,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/payout-service.ts",
        "line": 256,
        "code": "if (contracts.length === 0) return null;",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 267,
        "code": "amount: commission,",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/payout-service.ts",
        "line": 275,
        "code": "if (totalCommissions === 0) return null;",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 283,
        "code": "// Verificar monto mínimo",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 287,
        "code": "amount: netAmount,",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 296,
        "code": "amount: netAmount,",
        "timestamp": "2025-09-04T05:18:28.449Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/payout-service.ts",
        "line": 392,
        "code": "if (rentalPayments.length === 0) return null;",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 401,
        "code": "amount: payment.amount,",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 405,
        "code": "totalRentalIncome += payment.amount;",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 414,
        "code": "// Verificar monto mínimo",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 418,
        "code": "amount: netAmount,",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 427,
        "code": "amount: netAmount,",
        "timestamp": "2025-09-04T05:18:28.450Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 456,
        "code": "totalAmount: payouts.reduce((sum, p) => sum + p.amount, 0),",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 470,
        "code": "throw new BusinessLogicError(",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 480,
        "code": "amount: batch.totalAmount,",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 490,
        "code": "batch.processedAt = new Date();",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 491,
        "code": "batch.completedAt = new Date();",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 501,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 539,
        "code": "// 1. Validar elegibilidad KYC",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 540,
        "code": "await this.validateKYCEligibility(payout.recipientId);",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 546,
        "code": "throw new BusinessLogicError(",
        "timestamp": "2025-09-04T05:18:28.451Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 553,
        "code": "throw new BusinessLogicError(",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 562,
        "code": "throw new BusinessLogicError(",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 570,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 587,
        "code": "payout.amount,",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 613,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 622,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 625,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/payout-service.ts",
        "line": 643,
        "code": "return verifiedAccount || null;",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 663,
        "code": "throw new BusinessLogicError('Configuración de cuenta bancaria de plataforma no encontrada');",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 686,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 687,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 712,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 713,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 719,
        "code": "* Valida elegibilidad KYC del destinatario",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 721,
        "code": "private static async validateKYCEligibility(recipientId: string): Promise<void> {",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 723,
        "code": "const kycCheck = await KYCService.canReceivePayouts(recipientId);",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 725,
        "code": "if (!kycCheck.canReceive) {",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 726,
        "code": "throw new BusinessLogicError(",
        "timestamp": "2025-09-04T05:18:28.452Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 727,
        "code": "`Usuario no elegible para payouts: ${kycCheck.reason}`",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 731,
        "code": "logger.info('Validación KYC exitosa', {",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 733,
        "code": "kycLevel: kycCheck.currentLevel",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payout-service.ts",
        "line": 737,
        "code": "logger.error('Error validando elegibilidad KYC:', {",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payout-service.ts",
        "line": 741,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 756,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 818,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 828,
        "code": "message: `Payout de ${payout.amount.toLocaleString('es-CL')} CLP requiere aprobación manual`,",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 833,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 862,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 863,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 904,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.453Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 937,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 959,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 982,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 999,
        "code": "amount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/payout-service.ts",
        "line": 1003,
        "code": "netAmount: payout.amount,",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 1037,
        "code": "const now = new Date();",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 1038,
        "code": "const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payout-service.ts",
        "line": 1039,
        "code": "const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);",
        "timestamp": "2025-09-04T05:18:28.454Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 28,
        "code": "amount: number;",
        "timestamp": "2025-09-04T05:18:28.456Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 33,
        "code": "amount: number;",
        "timestamp": "2025-09-04T05:18:28.456Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 42,
        "code": "amount: number;",
        "timestamp": "2025-09-04T05:18:28.456Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 112,
        "code": "throw new DatabaseError('Error al obtener configuración de comisiones');",
        "timestamp": "2025-09-04T05:18:28.456Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 147,
        "code": "throw new BusinessLogicError('Contrato no encontrado', 'CONTRACT_NOT_FOUND');",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 151,
        "code": "throw new BusinessLogicError('El contrato no tiene corredor asignado', 'NO_BROKER_ASSIGNED');",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 172,
        "code": "const totalBonus = bonuses.reduce((sum, bonus) => sum + bonus.amount, 0);",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 173,
        "code": "const totalDeductions = deductions.reduce((sum, deduction) => sum + deduction.amount, 0);",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 186,
        "code": "amount: totalCommission,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 222,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 224,
        "code": "throw new DatabaseError('Error al calcular comisión');",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 263,
        "code": "): Promise<Array<{ type: string; amount: number; reason: string }>> {",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 264,
        "code": "const bonuses: Array<{ type: string; amount: number; reason: string }> = [];",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 275,
        "code": "amount: baseCommission * 0.1,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 275,
        "code": "amount: baseCommission * 0.1,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 284,
        "code": "amount: baseCommission * 0.05,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 284,
        "code": "amount: baseCommission * 0.05,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 293,
        "code": "amount: baseCommission * 0.15,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 293,
        "code": "amount: baseCommission * 0.15,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 302,
        "code": "amount: baseCommission * 0.2,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 302,
        "code": "amount: baseCommission * 0.2,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 312,
        "code": "amount: baseCommission * 0.05,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 312,
        "code": "amount: baseCommission * 0.05,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 325,
        "code": "): Promise<Array<{ type: string; amount: number; reason: string }>> {",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 326,
        "code": "const deductions: Array<{ type: string; amount: number; reason: string }> = [];",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Multiplicación por cero - verificar intención",
        "file": "src/lib/commission-service.ts",
        "line": 338,
        "code": "amount: baseCommission * 0.1,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 338,
        "code": "amount: baseCommission * 0.1,",
        "timestamp": "2025-09-04T05:18:28.457Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 376,
        "code": "throw new BusinessLogicError('No hay contratos elegibles para comisión en este período');",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 394,
        "code": "amount: totalAmount,",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/commission-service.ts",
        "line": 402,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/commission-service.ts",
        "line": 403,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 409,
        "code": "amount: totalAmount,",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 416,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 431,
        "code": "const amount = Math.floor(Math.random() * 1000000) + 50000; // Monto simulado",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 438,
        "code": "amount,",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/commission-service.ts",
        "line": 441,
        "code": "processedAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Monto sin validación de positividad",
        "file": "src/lib/commission-service.ts",
        "line": 456,
        "code": "amount",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 461,
        "code": "throw new DatabaseError('Error al procesar pago de comisión');",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "high",
        "description": "Posible recursión infinita detectada",
        "file": "src/lib/commission-service.ts",
        "line": 468,
        "code": "static async getBrokerCommissionStats(brokerId: string) {",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/commission-service.ts",
        "line": 524,
        "code": "throw new DatabaseError('Error al obtener estadísticas de comisión');",
        "timestamp": "2025-09-04T05:18:28.458Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 6,
        "code": "* Estado de verificación KYC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 8,
        "code": "export enum KYCStatus {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 18,
        "code": "* Nivel de verificación KYC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 20,
        "code": "export enum KYCLevel {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 28,
        "code": "* Documento KYC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 30,
        "code": "export interface KYCDocument {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 45,
        "code": "* Verificación KYC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 47,
        "code": "export interface KYCVerification {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 50,
        "code": "level: KYCLevel;",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 92,
        "code": "documents: KYCDocument[];",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 112,
        "code": "* Servicio de Know Your Customer (KYC)",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 114,
        "code": "export class KYCService {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 116,
        "code": "* Inicia el proceso KYC para un usuario",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 118,
        "code": "static async initiateKYC(",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 120,
        "code": "level: KYCLevel = KYCLevel.BASIC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 121,
        "code": "): Promise<KYCVerification> {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 124,
        "code": "const existingKYC = await this.getActiveKYC(userId);",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 126,
        "code": "throw new BusinessLogicError('Usuario ya tiene KYC aprobado');",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 126,
        "code": "throw new BusinessLogicError('Usuario ya tiene KYC aprobado');",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 145,
        "code": "throw new BusinessLogicError('Usuario no encontrado');",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 148,
        "code": "// Crear verificación KYC",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 149,
        "code": "const kycVerification: KYCVerification = {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 150,
        "code": "id: `kyc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 159,
        "code": "dateOfBirth: new Date(), // Placeholder",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 183,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 184,
        "code": "updatedAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 185,
        "code": "expiresAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000) // 1 año",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 188,
        "code": "logger.info('Proceso KYC iniciado', {",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 190,
        "code": "kycId: kycVerification.id,",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/kyc-service.ts",
        "line": 194,
        "code": "return kycVerification;",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 194,
        "code": "return kycVerification;",
        "timestamp": "2025-09-04T05:18:28.459Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 197,
        "code": "logger.error('Error iniciando KYC:', error);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 198,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 203,
        "code": "* Sube un documento para verificación KYC",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 207,
        "code": "documentType: KYCDocument['type'],",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 211,
        "code": "): Promise<KYCDocument> {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 215,
        "code": "throw new ValidationError('Tipo de documento no válido');",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 220,
        "code": "throw new ValidationError('Archivo demasiado grande. Máximo 10MB');",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 225,
        "code": "throw new ValidationError('Tipo de archivo no válido para este documento');",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 231,
        "code": "const document: KYCDocument = {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 238,
        "code": "uploadedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 241,
        "code": "logger.info('Documento KYC subido', {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 251,
        "code": "logger.error('Error subiendo documento KYC:', error);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 252,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 257,
        "code": "* Verifica la información KYC",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 259,
        "code": "static async verifyKYC(",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 260,
        "code": "kycId: string,",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 270,
        "code": "const kyc = await this.getKYCById(kycId);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 271,
        "code": "if (!kyc) {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 272,
        "code": "throw new BusinessLogicError('Verificación KYC no encontrada');",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 272,
        "code": "throw new BusinessLogicError('Verificación KYC no encontrada');",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 276,
        "code": "const automatedChecks = await this.performAutomatedChecks(kyc);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 279,
        "code": "const riskScore = this.calculateRiskScore(kyc, automatedChecks);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 285,
        "code": "const requiredDocs = this.getRequiredDocuments(kyc.level);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Uso de == en lugar de === puede causar comparación laxa",
        "file": "src/lib/kyc-service.ts",
        "line": 294,
        "code": "if (automatedChecks.allPassed && hasAllRequiredDocs && riskLevel !== 'critical') {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 305,
        "code": "// Actualizar KYC",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 307,
        "code": "kyc.riskScore = riskScore;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 308,
        "code": "kyc.riskLevel = riskLevel;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 309,
        "code": "kyc.lastReviewDate = new Date();",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 309,
        "code": "kyc.lastReviewDate = new Date();",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 310,
        "code": "kyc.reviewNotes = reviewNotes;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 311,
        "code": "kyc.updatedAt = new Date();",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 311,
        "code": "kyc.updatedAt = new Date();",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 313,
        "code": "logger.info('KYC verificado', {",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 314,
        "code": "kycId,",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 315,
        "code": "userId: kyc.userId,",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 332,
        "code": "logger.error('Error verificando KYC:', error);",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 333,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.460Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 425,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/kyc-service.ts",
        "line": 472,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 477,
        "code": "* Obtiene verificación KYC activa de un usuario",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 479,
        "code": "static async getActiveKYC(userId: string): Promise<KYCVerification | null> {",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 485,
        "code": "logger.error('Error obteniendo KYC activo:', error);",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 491,
        "code": "* Obtiene verificación KYC por ID",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 493,
        "code": "static async getKYCById(kycId: string): Promise<KYCVerification | null> {",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 499,
        "code": "logger.error('Error obteniendo KYC por ID:', error);",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 507,
        "code": "private static async performAutomatedChecks(kyc: KYCVerification): Promise<{",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 515,
        "code": "emailValid: kyc.verifications.emailVerified || Math.random() > 0.1,",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 516,
        "code": "phoneValid: kyc.verifications.phoneVerified || Math.random() > 0.1,",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 517,
        "code": "documentValid: kyc.verifications.documentVerified || Math.random() > 0.1,",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 518,
        "code": "addressValid: kyc.verifications.addressVerified || Math.random() > 0.1,",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 531,
        "code": "private static calculateRiskScore(kyc: KYCVerification, checks: any): number {",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 541,
        "code": "if (!kyc.financialInfo) score += 10;",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 544,
        "code": "const requiredDocs = this.getRequiredDocuments(kyc.level);",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 545,
        "code": "const submittedDocs = kyc.documents.length;",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/kyc-service.ts",
        "line": 550,
        "code": "const age = new Date().getFullYear() - kyc.personalInfo.dateOfBirth.getFullYear();",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 550,
        "code": "const age = new Date().getFullYear() - kyc.personalInfo.dateOfBirth.getFullYear();",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/kyc-service.ts",
        "line": 561,
        "code": "if (score <= 20) return 'low';",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/kyc-service.ts",
        "line": 562,
        "code": "if (score <= 40) return 'medium';",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Return dentro de condición if - verificar flujo",
        "file": "src/lib/kyc-service.ts",
        "line": 563,
        "code": "if (score <= 70) return 'high';",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 570,
        "code": "private static getRequiredDocuments(level: KYCLevel): KYCDocument['type'][] {",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 572,
        "code": "[KYCLevel.BASIC]: [],",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 573,
        "code": "[KYCLevel.INTERMEDIATE]: ['id_card', 'selfie'],",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 574,
        "code": "[KYCLevel.ADVANCED]: ['id_card', 'selfie', 'proof_of_address'],",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 575,
        "code": "[KYCLevel.PREMIUM]: ['id_card', 'selfie', 'proof_of_address', 'video']",
        "timestamp": "2025-09-04T05:18:28.461Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 619,
        "code": "const fileId = `kyc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 621,
        "code": "const storageUrl = `https://storage.rent360.cl/kyc/${fileId}.${fileExtension}`;",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 633,
        "code": "* Verifica si el usuario cumple con requisitos KYC para payouts",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 638,
        "code": "requiredLevel: KYCLevel;",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 639,
        "code": "currentLevel?: KYCLevel;",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 643,
        "code": "const kyc = await this.getActiveKYC(userId);",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 647,
        "code": "requiredLevel: KYCLevel.INTERMEDIATE,",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 651,
        "code": "if (!kyc) {",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 652,
        "code": "result.reason = 'KYC no iniciado';",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 654,
        "code": "'Iniciar proceso de verificación KYC',",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 661,
        "code": "result.currentLevel = kyc.level;",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Uso de == en lugar de === puede causar comparación laxa",
        "file": "src/lib/kyc-service.ts",
        "line": 663,
        "code": "if (kyc.status !== KYCStatus.APPROVED) {",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 672,
        "code": "if (kyc.riskLevel === 'critical') {",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 682,
        "code": "if (kyc.level === KYCLevel.BASIC) {",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 700,
        "code": "requiredLevel: KYCLevel.INTERMEDIATE,",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 707,
        "code": "* Obtiene estadísticas KYC",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/kyc-service.ts",
        "line": 709,
        "code": "static async getKYCStats(): Promise<{",
        "timestamp": "2025-09-04T05:18:28.462Z"
      },
      {
        "severity": "high",
        "description": "Posible recursión infinita detectada",
        "file": "src/middleware.ts",
        "line": 26,
        "code": "export function middleware(request: NextRequest) {",
        "timestamp": "2025-09-04T05:18:28.463Z"
      },
      {
        "severity": "low",
        "description": "Función sin return explícito",
        "file": "src/middleware.ts",
        "line": 0,
        "code": "function middleware(request: NextRequest) {\r\n  con...",
        "timestamp": "2025-09-04T05:18:28.464Z"
      },
      {
        "severity": "medium",
        "description": "Uso de == en lugar de === puede causar comparación laxa",
        "file": "src/lib/auth.ts",
        "line": 106,
        "code": "if (decoded.role !== requiredRole) {",
        "timestamp": "2025-09-04T05:18:28.464Z"
      },
      {
        "severity": "high",
        "description": "Posible recursión infinita detectada",
        "file": "src/lib/auth.ts",
        "line": 123,
        "code": "export function generateTokens(userId: string, email: string, role: string, name: string) {",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "high",
        "description": "Posible recursión infinita detectada",
        "file": "src/lib/auth.ts",
        "line": 149,
        "code": "export function setAuthCookies(response: any, accessToken: string, refreshToken: string) {",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "high",
        "description": "Posible recursión infinita detectada",
        "file": "src/lib/auth.ts",
        "line": 171,
        "code": "export function clearAuthCookies(response: any) {",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "low",
        "description": "Función sin return explícito",
        "file": "src/lib/auth.ts",
        "line": 0,
        "code": "function generateTokens(userId: string, email: str...",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "low",
        "description": "Función sin return explícito",
        "file": "src/lib/auth.ts",
        "line": 0,
        "code": "function setAuthCookies(response: any, accessToken...",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "low",
        "description": "Función sin return explícito",
        "file": "src/lib/auth.ts",
        "line": 0,
        "code": "function clearAuthCookies(response: any) {\r\n  resp...",
        "timestamp": "2025-09-04T05:18:28.465Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payment-config.ts",
        "line": 59,
        "code": "requiresKYC?: boolean;",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 152,
        "code": "throw new DatabaseError(`Error al obtener configuración del servicio ${serviceId}`);",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 175,
        "code": "throw new DatabaseError('Error al obtener configuraciones de servicios');",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 194,
        "code": "throw new BusinessLogicError(`Servicio ${serviceId} no encontrado`);",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 200,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 213,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 220,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 221,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 227,
        "code": "this.lastRefresh = new Date();",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 233,
        "code": "throw error;",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 243,
        "code": "throw new BusinessLogicError(`Servicio ${serviceId} no encontrado`);",
        "timestamp": "2025-09-04T05:18:28.466Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 268,
        "code": "throw new BusinessLogicError(`Servicio ${serviceId} no encontrado`);",
        "timestamp": "2025-09-04T05:18:28.467Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 290,
        "code": "lastTested: new Date(),",
        "timestamp": "2025-09-04T05:18:28.467Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 450,
        "code": "this.lastRefresh = new Date();",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "medium",
        "description": "Throw sin new Error()",
        "file": "src/lib/payment-config.ts",
        "line": 455,
        "code": "throw new DatabaseError('Error al cargar configuraciones de servicios de pago');",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payment-config.ts",
        "line": 474,
        "code": "requiresKYC: false,",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 488,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 489,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payment-config.ts",
        "line": 501,
        "code": "requiresKYC: true,",
        "timestamp": "2025-09-04T05:18:28.468Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 514,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 515,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payment-config.ts",
        "line": 528,
        "code": "requiresKYC: true,",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 543,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 544,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "medium",
        "description": "Verificación KYC incompleta",
        "file": "src/lib/payment-config.ts",
        "line": 557,
        "code": "requiresKYC: true,",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 572,
        "code": "createdAt: new Date(),",
        "timestamp": "2025-09-04T05:18:28.469Z"
      },
      {
        "severity": "low",
        "description": "Fecha sin validación de validez",
        "file": "src/lib/payment-config.ts",
        "line": 573,
        "code": "updatedAt: new Date()",
        "timestamp": "2025-09-04T05:18:28.469Z"
      }
    ],
    "communication": [],
    "incomplete": [],
    "functionality": [],
    "critical": [
      {
        "severity": "medium",
        "description": "Dependencia inestable: @anthropic-ai/sdk@^0.17.1",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "medium",
        "description": "Dependencia inestable: @google/generative-ai@^0.14.1",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "medium",
        "description": "Dependencia inestable: class-variance-authority@^0.7.0",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "medium",
        "description": "Dependencia inestable: lucide-react@^0.294.0",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "medium",
        "description": "Dependencia inestable: next-themes@^0.2.1",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "medium",
        "description": "Dependencia inestable: sharp@^0.33.0",
        "file": "package.json",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      },
      {
        "severity": "high",
        "description": "Archivo de configuración faltante: .env.example",
        "file": ".env.example",
        "line": 0,
        "code": "",
        "timestamp": "2025-09-04T05:18:31.312Z"
      }
    ]
  },
  "overallScore": 0,
  "recommendations": {
    "critical": [
      "Resolver todos los problemas críticos antes del próximo deploy",
      "Implementar validaciones de seguridad faltantes",
      "Corregir dependencias faltantes o versiones problemáticas",
      "Revisar configuraciones incompletas"
    ],
    "high": [
      "Completar funcionalidades parcialmente implementadas",
      "Resolver problemas de comunicación entre componentes",
      "Implementar manejo de errores consistente",
      "Agregar validaciones a formularios y APIs"
    ],
    "medium": [
      "Limpiar código comentado y TODOs",
      "Optimizar funciones con muchos parámetros",
      "Implementar metadata en páginas faltantes",
      "Agregar indicadores de carga y error"
    ],
    "low": [
      "Mejorar documentación de código",
      "Optimizar imports no utilizados",
      "Agregar labels accesibles a inputs",
      "Implementar estados vacíos en listas"
    ]
  }
}